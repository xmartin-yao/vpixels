## Copyright (C) 2019 Xueyi Yao
## 
## This file is part of VPixels.
## 
## VPixels is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## VPixels is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with VPixels.  If not, see <https://www.gnu.org/licenses/>.

## Makefile.am for test/bmp/

## for CMake build
EXTRA_DIST = CMakeLists.txt

## Source of BmpTest
BmpTest_SOURCES = BmpInfoTest.h BmpInfoTest.cpp \
                  BmpInfo1BitTest.h BmpInfo1BitTest.cpp \
                  BmpInfo4BitTest.h BmpInfo4BitTest.cpp \
                  BmpInfo8BitTest.h BmpInfo8BitTest.cpp \
                  BmpInfo24BitTest.h BmpInfo24BitTest.cpp \
                  BmpFileHeaderTest.h BmpFileHeaderTest.cpp \
                  BmpInfoHeaderTest.h BmpInfoHeaderTest.cpp \
                  BmpColorTableTest.h BmpColorTableTest.cpp \
                  BmpImageDataTest.h BmpImageDataTest.cpp \
                  BmpImplTest.h BmpImplTest.cpp \
                  BmpTest.h BmpTest.cpp \
                  @top_srcdir@/test/UnitTestMain.cpp

## Dependency of BmpTest: lib to be tested
BmpTest_LDADD = @top_builddir@/src/bmp/libvpbmp.a

## Dependencies of target check_PROGRAMS
## i.e. executables to be built when running 'make check'
check_PROGRAMS = BmpTest

## Dependencies of target check-TESTS
## i.e. executables to be invoked when running 'make check'
TESTS = BmpTest

## includes, flags and libs
AM_CXXFLAGS = -I@top_srcdir@/src/bmp -I@top_srcdir@/include/vp $(CPPUNIT_CFLAGS)
LIBS = $(CPPUNIT_LIBS)

## all-local is a target of both 'make' and 'make check'
all-local: pre-test-setup

## setting up before running tests
pre-test-setup:
	@echo > empty.bmp
	@echo > export_exist.bmp
	@$(RM) export_new.bmp

clean-tmp-files:
	@$(RM) *.bmp

## if code coverage check is enabled (using configure --enable-gcov)
if CHECK_COVERAGE

## check-local, together with check-TESTS (i.e. unit tests), is a target
## of check-am. however, coverage check is supposed to be done after the
## running of unit tests, so make check-coverage a dependency of check-TESTS
## (see definition of check-coverage), just in case that 'make' is run in
## parallel (e.g. make check -j2)
check-local: check-coverage

## check coverage of code in src/bmp and current directory (test/bmp)
## *.gcda files are accumulative and need to be removed after each run
check-coverage: check-TESTS
	@echo Checking code coverage...
	@echo ========== libvpbmp ===========
	@gcov -rl @top_builddir@/src/bmp/*.o
	@echo ===============================
	@$(RM) @top_builddir@/src/bmp/*.gcda
	@echo
	@echo ======= libvpbmp tests ========
	@gcov -rl $(BmpTest_OBJECTS)
	@echo ===============================
	@$(RM) *.gcda

## clean up files related to coverage check
## *.gcno is generated when source file is compiled
## *.gcda is generated after executing and is accumulative
## *.gcov is generated by gcov
clean-coverage-files:
	@$(RM) *.gcno *.gcov *.gcda

## clean-local is a target of 'make clean'
clean-local: clean-tmp-files clean-coverage-files

else   # CHECK_COVERAGE

clean-local: clean-tmp-files

endif  # CHECK_COVERAGE

## User defined targets
.PHONY: check-coverage pre-test-setup clean-tmp-files clean-coverage-files
